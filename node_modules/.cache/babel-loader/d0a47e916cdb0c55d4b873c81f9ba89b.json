{"remainingRequest":"/home/jul10/stradata/comparador/node_modules/babel-loader/lib/index.js!/home/jul10/stradata/comparador/src/store.js","dependencies":[{"path":"/home/jul10/stradata/comparador/src/store.js","mtime":1598836105291},{"path":"/home/jul10/stradata/comparador/node_modules/cache-loader/dist/cjs.js","mtime":1598838716374},{"path":"/home/jul10/stradata/comparador/node_modules/babel-loader/lib/index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    status: '',\n    token: localStorage.getItem('token') || '',\n    user: {}\n  },\n  mutations: {\n    auth_request: function auth_request(state) {\n      state.status = 'loading';\n    },\n    auth_success: function auth_success(state, token, user) {\n      state.status = 'success';\n      state.token = token;\n      state.user = user;\n    },\n    auth_error: function auth_error(state) {\n      state.status = 'error';\n    },\n    logout: function logout(state) {\n      state.status = '';\n      state.token = '';\n    }\n  },\n  actions: {\n    login: function login(_ref, user) {\n      var commit = _ref.commit;\n      return new Promise(function (resolve, reject) {\n        commit('auth_request');\n        axios({\n          url: 'http://127.0.0.1:8001/api/auth/login',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          var token = resp.data.access_token;\n          var user = resp.data.user;\n          localStorage.setItem('token', token); // Add the following line:\n\n          axios.defaults.headers.common['Authorization'] = token;\n          commit('auth_success', token, user);\n          resolve(resp);\n        }).catch(function (err) {\n          commit('auth_error');\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    register: function register(_ref2, user) {\n      var commit = _ref2.commit;\n      return new Promise(function (resolve, reject) {\n        commit('auth_request');\n        axios({\n          url: 'http://127.0.0.1:8001/api/auth/signup',\n          data: user,\n          method: 'POST'\n        }).then(function (resp) {\n          // const token = resp.data.token\n          // const user = resp.data.user\n          // localStorage.setItem('token', token)\n          //     // Add the following line:\n          // axios.defaults.headers.common['Authorization'] = token\n          // commit('auth_success', token, user)\n          resolve(resp);\n        }).catch(function (err) {\n          commit('auth_error', err);\n          localStorage.removeItem('token');\n          reject(err);\n        });\n      });\n    },\n    logout: function logout(_ref3) {\n      var commit = _ref3.commit;\n      return new Promise(function (resolve, reject) {\n        commit('logout');\n        localStorage.removeItem('token');\n        delete axios.defaults.headers.common['Authorization'];\n        resolve();\n      });\n    }\n  },\n  getters: {\n    isLoggedIn: function isLoggedIn(state) {\n      return !!state.token;\n    },\n    authStatus: function authStatus(state) {\n      return state.status;\n    }\n  }\n});",{"version":3,"sources":["src/store.js"],"names":["Vue","Vuex","axios","use","Store","state","status","token","localStorage","getItem","user","mutations","auth_request","auth_success","auth_error","logout","actions","login","commit","Promise","resolve","reject","url","data","method","then","resp","access_token","setItem","defaults","headers","common","catch","removeItem","err","register","getters","isLoggedIn","authStatus"],"mappings":"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","sourceRoot":"/home/jul10/stradata/comparador","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n    state: {\n        status: '',\n        token: localStorage.getItem('token') || '',\n        user: {}\n    },\n    mutations: {\n        auth_request(state) {\n            state.status = 'loading'\n        },\n        auth_success(state, token, user) {\n            state.status = 'success'\n            state.token = token\n            state.user = user\n        },\n        auth_error(state) {\n            state.status = 'error'\n        },\n        logout(state) {\n            state.status = ''\n            state.token = ''\n        },\n    },\n    actions: {\n        login({ commit }, user) {\n            return new Promise((resolve, reject) => {\n                commit('auth_request')\n                axios({ url: 'http://127.0.0.1:8001/api/auth/login', data: user, method: 'POST' })\n                    .then(resp => {\n                        const token = resp.data.access_token\n                        const user = resp.data.user\n                        localStorage.setItem('token', token)\n                            // Add the following line:\n                        axios.defaults.headers.common['Authorization'] = token\n                        commit('auth_success', token, user)\n                        resolve(resp)\n                    })\n                    .catch(err => {\n                        commit('auth_error')\n                        localStorage.removeItem('token')\n                        reject(err)\n                    })\n            })\n        },\n        register({ commit }, user) {\n            return new Promise((resolve, reject) => {\n                commit('auth_request')\n                axios({ url: 'http://127.0.0.1:8001/api/auth/signup', data: user, method: 'POST' })\n                    .then(resp => {\n                        // const token = resp.data.token\n                        // const user = resp.data.user\n                        // localStorage.setItem('token', token)\n                        //     // Add the following line:\n                        // axios.defaults.headers.common['Authorization'] = token\n                        // commit('auth_success', token, user)\n                        resolve(resp)\n                    })\n                    .catch(err => {\n                        commit('auth_error', err)\n                        localStorage.removeItem('token')\n                        reject(err)\n                    })\n            })\n        },\n        logout({ commit }) {\n            return new Promise((resolve, reject) => {\n                commit('logout')\n                localStorage.removeItem('token')\n                delete axios.defaults.headers.common['Authorization']\n                resolve()\n            })\n        }\n    },\n    getters: {\n        isLoggedIn: state => !!state.token,\n        authStatus: state => state.status,\n    }\n})"]}]}